# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run the deploy script.
# The deploy script publishes our build to gh-pages.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy to gh-pages

on:
  release:
    types: [published]

jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - name: Dump env
        run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  check:
    runs-on: ubuntu-latest

    steps:
    - name: Check Release
      id: check-release
      env:
        RELEASE_TAG: ${{ github.event.release.tag_name }}
      run: |
        if [[ $RELEASE_TAG =~ ^v1\.[0-9]+\.[0-9]+$ ]]; then
          echo ::set-output name=match::true
        fi
        
    - name: Build
      if: steps.check-release.outputs.match == 'true'
      run: |
        echo "Tag is a match"

  build:
    needs: check
    runs-on: ubuntu-latest
    if: needs.check.steps.check-release.outputs.match == 'true'

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'

    - run: npm ci # do a clean install of all of our dependencies
    - run: npm run build # check if our library can be built without issues

    - name: Deploy to gh-pages # publish our site to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }} # authenticate the action to our workflow
        publish_dir: ./build # this directory will be copied over to gh-pages
